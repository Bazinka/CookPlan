buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply from: "$rootDir/constants.gradle"

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.cookplan"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release
        debug
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
            multiDexEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.debug
            multiDexEnabled true
        }
    }
}
def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('DEBUG_keystoreDir') && props.containsKey('DEBUG_keystorePassword') &&
            props.containsKey('DEBUG_keyAlias') && props.containsKey('DEBUG_aliasPassword')) {
        android.signingConfigs.debug.storeFile = file(props['DEBUG_keystoreDir'])
        android.signingConfigs.debug.storePassword = props['DEBUG_keystorePassword']
        android.signingConfigs.debug.keyAlias = props['DEBUG_keyAlias']
        android.signingConfigs.debug.keyPassword = props['DEBUG_aliasPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:support-v4:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"
    compile "com.android.support:cardview-v7:$support_library_version"
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:design:$support_library_version"
    compile "com.android.support:customtabs:$support_library_version"
    compile "com.google.android.gms:play-services-auth:$firebase_version"

    compile "com.google.firebase:firebase-auth:$firebase_version"
    compile "com.google.firebase:firebase-core:$firebase_version"
    compile "com.google.firebase:firebase-database:$firebase_version"
    compile "com.google.firebase:firebase-storage:$firebase_version"


    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile 'com.rmtheis:tess-two:5.4.1'
    compile 'net.danlew:android.joda:2.9.4.1'
    compile 'com.bettervectordrawable:lib:0.8'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support:recyclerview-v7:25.3.0'
    compile 'com.google.code.gson:gson:2.7'

    compile "io.reactivex.rxjava2:rxjava:2.0.4"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    testCompile 'junit:junit:4.12'
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:+'
}


apply plugin: 'com.google.gms.google-services'